name: Deploy to DigitalOcean

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 🧾 Checkout repository
        uses: actions/checkout@v4

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18" # match your droplet if different

      - name: 🔐 Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DO_SSH_PRIVATE_KEY }}

      - name: 🧱 Add droplet to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts

      - name: 🧹 Clean destination (keep only .env)
        run: |
          ssh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} "
            set -e
            mkdir -p '${{ secrets.DEPLOY_PATH }}'
            cd '${{ secrets.DEPLOY_PATH }}'
            # remove everything except .env
            find . -mindepth 1 -maxdepth 1 ! -name '.env' -exec rm -rf {} +
          "

      - name: 📤 Sync repo to server
        run: |
          rsync -az --delete --delete-after --human-readable --progress \
            --exclude ".git/" \
            --exclude ".github/" \
            --filter "protect .env" \
            ./ ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:'${{ secrets.DEPLOY_PATH }}/'

      - name: 🚀 Install deps & restart PM2 (deploy user, Yarn, index.js)
        run: |
          ssh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} << 'EOF'
            set -e
            cd '${{ secrets.DEPLOY_PATH }}'

            # make sure the deploy user owns the project
            chown -R "$(whoami)":"$(whoami)" .

            # Yarn via Corepack (ignore pnpm EEXIST noise)
            corepack enable || true
            corepack prepare yarn@stable --activate || true

            echo "📦 Installing production deps..."
            YARN_ENABLE_GLOBAL_CACHE=0 yarn install --frozen-lockfile --production

            # Ensure PM2 is available for *this user* (no sudo)
            if ! command -v pm2 >/dev/null 2>&1; then
              npm config set prefix "$HOME/.npm-global"
              export PATH="$HOME/.npm-global/bin:$PATH"
              grep -q '.npm-global/bin' "$HOME/.profile" || echo 'export PATH="$HOME/.npm-global/bin:$PATH"' >> "$HOME/.profile"
              npm i -g pm2
            fi

            export PATH="$HOME/.npm-global/bin:$PATH"

            APP_NAME="ussd_smart_payment_solution"
            ENTRY_FILE="index.js"

            echo "🚀 (Re)starting PM2..."
            if pm2 describe "$APP_NAME" >/dev/null 2>&1; then
              pm2 restart "$APP_NAME" --update-env
            else
              pm2 start "$ENTRY_FILE" --name "$APP_NAME"
            fi

            pm2 save
            echo "✅ Deployment complete!"
          EOF
